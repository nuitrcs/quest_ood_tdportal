<%
  groups = OodSupport::User.new.groups.map(&:name).drop(1)
  emailcmd = '/etc/ood/config/helper_scripts/get_user_email_from_netid.sh ' + ENV["USER"]
  mailaddr = %x[ #{emailcmd}]
  mailaddr = mailaddr.strip
%>
---
batch_connect:
  template: basic
  websockify_cmd: '/usr/bin/websockify'
  script_wrapper: |
    module purge
    module load singularity
    cat << "CTRSCRIPT" > container.sh
    export PATH="$PATH:/opt/TurboVNC/bin"
    %s
    CTRSCRIPT

    # What container are we using
    export container_image="<%= version %>"

    # All our software in /software so have to bind that
    export SING_BINDS="--bind /software:/software --bind /hpc/software:/hpc/software"

    ## bind some extra stuff to be able to talk to slurm from within the container
    export SING_BINDS="$SING_BINDS -B /etc/passwd -B /etc/slurm -B `which sbatch ` -B `which srun ` -B `which sacct ` -B `which scontrol ` -B `which salloc ` -B `which scancel ` -B `which squeue ` -B /usr/lib64/slurm/ -B /usr/lib64/libmunge.so.2 -B /usr/lib64/libmunge.so.2.0.0 -B /usr/lib64/libpmi2.so -B /usr/lib64/libpmi2.so.0 -B /usr/lib64/libpmi2.so.0.0.0 -B /usr/lib64/libpmi.so -B /usr/lib64/libpmi.so.0 -B /usr/lib64/libpmi.so.0.0.0 -B /run"

    # only bind /kellogg is individual is part of kellogg group
    export SING_BINDS="$SING_BINDS <%= groups.include?('kellogg') ? "--bind /kellogg/:/kellogg/" : "" %>"

    # only bind /scratch/<netid> if individual has a scratch space
    export SING_BINDS="$SING_BINDS <%= File.directory?("/scratch/#{User.new.name}") ? "--bind /scratch/#{User.new.name}:/scratch/#{User.new.name}" : "" %>"

    # Only bind projects directories that the user would have access to based on their unix groups
    <%- groups.each do |group| %>
    export SING_BINDS="$SING_BINDS <%= File.directory?("/projects/#{group}") ? "--bind /projects/#{group}:/projects/#{group}" : "" %>"
    <%- end %>

    # Need to add the --nv flag if we are running on a GPU
    <%- if gres_value != "" %>
    export SING_GPU="--nv"
    <%- else %>
    export SING_GPU=""
    <%- end %>

    export SINGULARITYENV_TDPORTAL_USER_EMAIL=<%= mailaddr %>

    # Need to determine what path to bind based on the e-mail of the user the specific bindings are based on whether this is an external or internal user
    <%- if mailaddr.include?("northwestern.edu") %>
    export SING_BINDS="$SING_BINDS --bind /share/krgData:/share/krgData:ro "
    <%- else %>
    export SING_BINDS="$SING_BINDS --bind /share/NU-PCEDATA:/share/NU-PCEDATA:ro "
    <%- end %>

    singularity exec $SING_GPU $SING_BINDS "${container_image}" /bin/bash container.sh

  header: | 
    #!/bin/bash
        . ~/.bashrc

script:
   <%- if user_email != "" %>
   email_on_started: true
   <%- end %>
   native:
     # What partition is the user submitting to
     - "--partition"
     - "b1035"
     # Under what account is the user submitting this job
     - "--account"
     - "b1035"
     # How much time
     - "--time"
     - "00:30:00"
     # How many nodes
     - "--nodes"
     - "1"
     # How many CPUs
     - "--ntasks-per-node"
     - "1"
     # How much memory
     - "--mem"
     - "4G"
     # Job Name
     - "--job-name"
     - "TDPortal"
     # If the user supplies an e-mail, then they will get an e-mail when the job begins
     <%- if user_email != "" %>
     - "--mail-user"
     - "<%= user_email %>"
     <%- end %>
     - "--constraint"
     - "quest11"
